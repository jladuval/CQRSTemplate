@model CQRS.Web.Models.Membership.LogInModel
@{
    ViewBag.Title = "LogIn";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}

<div class="row row-login-signup">
    <!-- Login Panel -->
    <div class="panel-login open">
        <input type="hidden" id="startAsSignUp" value="@Model.IsSignUp"/>
        <h2 class="header-login">Login</h2>
        <div class="panel-inner">
            <div class="content-login-open">
                @using (Html.BeginForm("LogIn", "Membership", FormMethod.Post, new { @class = "form-horizontal" })) {
                    <!-- Email -->
                    <div class="control-group">
                        <label class="control-label" for="inputEmail">Email</label>
                        <div class="controls">
                            @Html.TextBoxFor(x => x.Email, new { @id = "inputEmail", placeholder="Email", type="email" })
                        </div>
                        <div class="validation-error">
                            @Html.ValidationMessageFor(x => x.Email)
                        </div>
                    </div>

                    <!-- Password -->
                    <div class="control-group">
                        <label class="control-label" for="inputPassword">Password</label>
                        <div class="controls">
                            @Html.PasswordFor(x => x.LoginPassword, new { @id = "password", placeholder="Password" })
                        </div>
                        <div class="validation-error">
                            @Html.ValidationMessageFor(x => x.LoginPassword)
                        </div>
                    </div>

                    <!-- Remember Me -->
                    <div class="control-group">
                        <div class="controls">
                            <label class="checkbox">
                                @Html.CheckBoxFor(x => x.RememberMe)
                                Remember me next time
                            </label>

                            <!-- Submit Button-->
                            <button type="submit" class="btn btn-red">Log in</button>
                        </div>
                    </div>

                    <!-- Forgot Password -->
                    <p>Forgotten your password? Please <a href="#">click here</a>.</p>
                    
                    <input type="hidden" name="IsSignUp" value="false" />
                }
            </div>
            <div class="content-login-closed" style="display: none;">
                <p>Already have a VisionsLive account? Log in below.</p>
                <button class="btn btn-red">Log In</button>
            </div>
        </div>
    </div>

    <!-- Sign up Panel -->
    <div class="panel-signup">
        <h2 class="header-signup">Sign up</h2>
        <div class="panel-inner">
            <div class="content-signup-open" style="display: none;">
                @using (Html.BeginForm("SignUp", "Membership", FormMethod.Post, new { @class = "form-horizontal form-full" })) {

                    <!-- Email -->
                    <div class="control-group">
                        <label class="control-label" for="inputEmailSignup">Email</label>
                        <div class="controls">
                            @Html.TextBoxFor(x => x.Email, new { @id = "inputEmailSignup", placeholder="Email", type="email" })
                        </div>
                        <div class="validation-error">
                            @Html.ValidationMessageFor(x => x.Email)
                        </div>
                    </div>

                    <!-- Password -->
                    <div class="control-group">
                        <label class="control-label" for="inputPasswordSignup">Password</label>
                        <div class="controls">
                            @Html.PasswordFor(x => x.SignUpPassword, new { @id = "inputPasswordSignup", placeholder = "Password" })
                        </div>
                        <div class="validation-error">
                            @Html.ValidationMessageFor(x => x.SignUpPassword)
                        </div>
                    </div>

                    <!-- Confirm Password -->
                    <div class="control-group">
                        <label class="control-label" for="inputPasswordConfirmSignup">Confirm Password</label>
                        <div class="controls">
                            @Html.PasswordFor(x => x.ConfirmPassword, new { @id = "inputPasswordConfirmSignup", placeholder = "Confirm Password" })
                        </div>
                        <div class="validation-error">
                            @Html.ValidationMessageFor(x => x.ConfirmPassword)
                        </div>
                    </div>

                    <!-- Remember me -->
                    <div class="control-group">
                        <div class="controls">
                            <label class="checkbox">
                                @Html.CheckBoxFor(x => x.RememberMe)
                                Remember me next time
                            </label>

                            <!-- Submit Button-->
                            <button type="submit" class="btn btn-red">Sign Up</button>
                        </div>
                    </div>
                    
                    <input type="hidden" name="IsSignUp" value="true" />
                }
            </div>
            <div class="content-signup-closed">
                <p>Don't have a VisionsLive account? Sign up today. Get a demo account for free.</p>
                <button class="btn btn-red">Sign up</button>
            </div>
        </div>
    </div>
</div>
